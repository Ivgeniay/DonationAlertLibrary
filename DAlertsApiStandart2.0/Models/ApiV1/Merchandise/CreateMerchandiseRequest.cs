using DAlertsApi.Models.Data;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;
using System.Xml.Linq;

namespace DAlertsApi.Models.ApiV1.Merchandise
{
    /// <summary>
    /// https://www.donationalerts.com/apidoc#api_v1__merchandises
    /// POST:                       https://www.donationalerts.com/api/v1/merchandise
    /// 
    /// curl --location --request POST 'https://www.donationalerts.com/api/v1/merchandise' \
    /// --header 'Authorization: Bearer <token>' \
    /// --form 'merchant_identifier=MARKET_GAMES_MAIL_RU' \
    /// --form 'merchandise_identifier=8082' \
    /// --form 'title[en_US]=Credit case' \
    /// --form 'title[ru_RU]=Кредитный кейс' \
    /// --form 'is_active=1' \
    /// --form 'is_percentage=1' \
    /// --form 'currency=USD' \
    /// --form 'price_user=30' \
    /// --form 'price_service=15' \
    /// --form 'url=https://market.games.mail.ru/game/1?product_id=8082&user_id={user_id}' \
    /// --form 'img_url=https://market.games.mail.ru/s3/media/product/picture/2020/7/a5077d65bed0439dd78a01d12cee948d.png' \
    /// --form 'signature=0d02b19c49ebbefb86d6bfa8b250d597da8e31a612ec57c315160a0ddc1a76f6'
    /// 
    /// merchant_identifier:        Merchant's ID on DonationAlerts
    /// merchandise_identifier:     Up to 16 characters long unique merchandise ID generated by the merchant
    /// title:                      Array of up to 1024 characters long strings representing the name of the merchandise in different locales.At minimum, a title for the en_US locale is required
    /// is_active:                  A value containing 0 or 1. Determines whether the merchandise is available for purchase or not.Default value: 0
    /// is_percentage:              A value containing 0 or 1. Determines whether the price_service and price_user parameters are recognized as amounts in a currency of the currency parameter or calculated as a percent of the sale's total. Default value: 0
    /// currency:                   One of the available currencies of merchandise. All revenue calculations will be performed according this value
    /// price_user:                 Amount of revenue added to streamer for each sale of the merchandise
    /// price_service:              Amount of revenue added to DonationAlerts for each sale of the merchandise
    /// url:                        Up to 128 characters long URL to the merchandise's web page. You may include the {user_id} and {user_merchandise_promocode} patterns in the URL that will be replaced in a UI with the user's ID and user's merchandise promocode
    /// img_url:                    Up to 128 characters long URL to the merchandise's image
    /// end_at_ts:                  Date and time when the merchandise becomes inactive represented as Unix timestamp
    /// signature:                  Request signature
    /// </summary>
    public class CreateMerchandiseRequest
    {
         public string Merchant_identifier { get; set;}  = string.Empty;
         public string Merchandise_identifier { get; set;}  = string.Empty;
         /// <summary>
         /// 'title[en_US]=Credit case' \
         /// 'title[ru_RU]=Кредитный кейс' \
         /// </summary>
         public Dictionary<string, string> Title { get; set;} = new Dictionary<string, string>();
         public int Is_active { get; set;} 
         public int Is_percentage { get; set;}
         [JsonConverter(typeof(StringEnumConverter))]
         public CurrenciesType Currency { get; set;}
         public decimal Price_user { get; set;} 
         public decimal Price_service { get; set;} 
         public string Url { get; set;}  = string.Empty;
         public string Img_url { get; set;}  = string.Empty;
         public int End_at_ts { get; set; } 
         public string Signature { get; set; }= string.Empty;
    }
}
